version: '3.8'
services:
  database-seed:
    container_name: database-seed
    build:
      context: ./
      dockerfile: dockerfile-database-seed
      args:
        BUILD_BASE_PATH: database
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-database_seed:latest
    restart: on-failure
    env_file:
      - ./.env

  cdn:
    container_name: cdn
    build:
      context: ./
      dockerfile: dockerfile-cdn
      args:
        BUILD_BASE_PATH: cdn
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-cdn:latest
    ports:
      - '${CDN_PORT}:80'

  orders-service:
    container_name: orders-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/orders
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-orders_service:latest
    ports:
      - '${ORDERS_SERVICE_PORT}:3001'
    env_file:
      - ./.env

  order-history-service:
    container_name: order-history-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/order-history
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-order_history_service:latest
    ports:
      - '${ORDER_HISTORY_SERVICE_PORT}:3002'
    env_file:
      - ./.env

  products-service:
    container_name: products-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/products
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-products_service:latest
    ports:
      - '${PRODUCTS_SERVICE_PORT}:3003'
    env_file:
      - ./.env

  payments-service:
    container_name: payments-service
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/services/payments
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-payments_service:latest
    ports:
      - '${PAYMENTS_SERVICE_PORT}:3004'
    env_file:
      - ./.env
    depends_on:
      - orders-service

  api-gateway:
    container_name: api-gateway
    build:
      context: ./
      dockerfile: dockerfile-server
      args:
        BUILD_BASE_PATH: server/src/api-gateway
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-api_gateway:latest
    ports:
      - '${API_GATEWAY_PORT}:3000'
    env_file:
      - ./.env
    depends_on:
      - orders-service
      - order-history-service
      - products-service

  client:
    container_name: client
    build:
      context: ./
      dockerfile: dockerfile-client
      args:
        BUILD_BASE_PATH: client/nextjs
        API_GATEWAY_URI: ${API_GATEWAY_URI}
        NEXT_PUBLIC_API_GATEWAY_URI: ${NEXT_PUBLIC_API_GATEWAY_URI}
    image: gcr.io/${PROJECT_ID}/redis-ms-cqrs-client:latest
    ports:
      - '${FRONTEND_CLIENT_PORT}:4200'
    env_file:
      - ./.env
    stdin_open: true # -i input flag
    tty: true # -t terminal flag
    depends_on:
      - api-gateway
      - cdn

volumes:
  redis-data:
  mongodb-data:
